{
    "openapi": "3.0.0",
    "info": {
        "title": "Univibe API",
        "description": "API documentation for Univibe project",
        "contact": {
            "name": "Your Name",
            "email": "your.email@example.com"
        },
        "version": "1.0.0"
    },
    "paths": {
        "/api/courses": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Get all courses",
                "description": "Returns a list of all courses",
                "operationId": "02eeda67042dba2d22a517f26fb8eaf1",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Courses"
                ],
                "summary": "Store a new course",
                "description": "Stores a new course and returns the created course",
                "operationId": "a4d6b7e7be59571034428ffbb86aaf0a",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Introduction to Programming"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "An introductory course on programming concepts."
                                    },
                                    "credits": {
                                        "type": "integer",
                                        "example": 3
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Course created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/about-us/titles": {
            "post": {
                "tags": [
                    "About Us"
                ],
                "summary": "Create an About Us title",
                "description": "Creates a new About Us title and returns the created title",
                "operationId": "ea2c8e067ebd71033b7c41de081b7a47",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "About Our Company"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "About Us title created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/about-us/{aboutUsId}/details": {
            "put": {
                "tags": [
                    "About Us"
                ],
                "summary": "Update an About Us detail",
                "description": "Updates the specified detail for the About Us entry",
                "operationId": "7b6cde587d861d97a15a5aa7f6a73a37",
                "parameters": [
                    {
                        "name": "aboutUsId",
                        "in": "path",
                        "description": "ID of the About Us entry",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description for About Us"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "About Us detail updated successfully"
                    },
                    "404": {
                        "description": "About Us entry not found"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "About Us"
                ],
                "summary": "Add detail to About Us",
                "description": "Creates a new detail for the specified About Us entry",
                "operationId": "9efd100d1c588c056741a4faf592a09f",
                "parameters": [
                    {
                        "name": "aboutUsId",
                        "in": "path",
                        "description": "ID of the About Us entry",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "description": {
                                        "type": "string",
                                        "example": "We are dedicated to excellence..."
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "About Us detail added successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "404": {
                        "description": "About Us entry not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/about-us": {
            "get": {
                "tags": [
                    "About Us"
                ],
                "summary": "Get all About Us entries with details",
                "description": "Retrieves all About Us entries along with their details",
                "operationId": "5ef71d894f1df7290a385eb3d33fa0af",
                "responses": {
                    "200": {
                        "description": "About Us entries retrieved successfully"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/about-us/{aboutUsId}": {
            "get": {
                "tags": [
                    "About Us"
                ],
                "summary": "Get a single About Us entry with details",
                "description": "Retrieves a single About Us entry by ID along with its details",
                "operationId": "6e0f3299f75e8c94c70735ae866edc37",
                "parameters": [
                    {
                        "name": "aboutUsId",
                        "in": "path",
                        "description": "ID of the About Us entry",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "About Us entry retrieved successfully"
                    },
                    "404": {
                        "description": "About Us entry not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/about-us/{id}": {
            "put": {
                "tags": [
                    "About Us"
                ],
                "summary": "Update an About Us title",
                "description": "Updates the specified About Us title",
                "operationId": "08b2af0c343f588c201f7c1460647bd1",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the About Us entry",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated About Us Title"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "About Us updated successfully"
                    },
                    "404": {
                        "description": "About Us entry not found"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "operationId": "8a56853624e025573120a09a4c75d468",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "first_name",
                                    "last_name",
                                    "email",
                                    "password",
                                    "university_id",
                                    "major_id"
                                ],
                                "properties": {
                                    "first_name": {
                                        "type": "string",
                                        "example": "John"
                                    },
                                    "last_name": {
                                        "type": "string",
                                        "example": "Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@students.university.edu"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password@123"
                                    },
                                    "profile_picture": {
                                        "type": "string",
                                        "format": "binary",
                                        "example": "profile_picture.jpg"
                                    },
                                    "is_verified": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "is_active": {
                                        "type": "boolean",
                                        "example": true
                                    },
                                    "university_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "major_id": {
                                        "type": "integer",
                                        "example": 2
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Verification email was sent",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Verification Email was sent"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Validation error"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user",
                "operationId": "a3b306d14572d1f4bd6c064b3233e7b8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "john.doe@students.university.edu"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "Password@123"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "token": {
                                            "type": "string",
                                            "example": "your_jwt_token_here"
                                        },
                                        "user": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "first_name": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "last_name": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john.doe@students.university.edu"
                                                },
                                                "role": {
                                                    "properties": {
                                                        "Role_name": {
                                                            "type": "string",
                                                            "example": "Student"
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Invalid credentials"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "operationId": "fe8f3429cd6979b3b4517e186505f9f9",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/courses/{id}": {
            "get": {
                "tags": [
                    "Courses"
                ],
                "summary": "Show a single course",
                "description": "Returns a single course by ID",
                "operationId": "f170bd35e3106c9d9bf5807499c80b68",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Courses"
                ],
                "summary": "Update an existing course",
                "description": "Updates an existing course and returns the updated course",
                "operationId": "4d00e54a4b57b3259c40894ad2d0c76b",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Course Title"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the course."
                                    },
                                    "credits": {
                                        "type": "integer",
                                        "example": 4
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Course updated successfully"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Courses"
                ],
                "summary": "Delete a course",
                "description": "Deletes an existing course by ID",
                "operationId": "3a2888333ed2868b6102094f5348520e",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the course",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Course deleted successfully"
                    },
                    "404": {
                        "description": "Course not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/instructors": {
            "post": {
                "tags": [
                    "Instructors"
                ],
                "summary": "Store a new instructor",
                "description": "Stores a new instructor and returns the created instructor",
                "operationId": "eafa861e61374164ae9f5395c66d6657",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.5
                                    },
                                    "university_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Instructor created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/instructors/{id}": {
            "get": {
                "tags": [
                    "Instructors"
                ],
                "summary": "Show a specific instructor",
                "description": "Returns a single instructor by ID",
                "operationId": "8535ef66d60a0f1728115c4869200929",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the instructor",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Instructor not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Instructors"
                ],
                "summary": "Update an existing instructor",
                "description": "Updates an existing instructor and returns the updated instructor",
                "operationId": "37dfc86f68847bc6236a645ff5164a55",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the instructor",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Name"
                                    },
                                    "rating": {
                                        "type": "number",
                                        "format": "float",
                                        "example": 4.7
                                    },
                                    "university_id": {
                                        "type": "integer",
                                        "example": 1
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Instructor updated successfully"
                    },
                    "404": {
                        "description": "Instructor not found"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Instructors"
                ],
                "summary": "Delete an instructor",
                "description": "Deletes an existing instructor by ID",
                "operationId": "319535f0b03fcd732b98b460873db9c7",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the instructor",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Instructor deleted successfully"
                    },
                    "404": {
                        "description": "Instructor not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/internships": {
            "get": {
                "tags": [
                    "Internships"
                ],
                "summary": "Get all internships",
                "description": "Returns a list of all internships",
                "operationId": "e74ba8f8c38595f4ef3ae05c4cbe1390",
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "post": {
                "tags": [
                    "Internships"
                ],
                "summary": "Store a new internship",
                "description": "Stores a new internship and returns the created internship",
                "operationId": "2a7b395aba72f9bf95f5530b3318e6d8",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Software Engineering Internship"
                                    },
                                    "major_id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A great opportunity to learn software development."
                                    },
                                    "link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/internship"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Internship created successfully"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/internships/{id}": {
            "get": {
                "tags": [
                    "Internships"
                ],
                "summary": "Show a single internship",
                "description": "Returns a single internship by ID",
                "operationId": "34ebc6dd4c3fe8e33b4a77233dcf1324",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the internship",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful operation"
                    },
                    "404": {
                        "description": "Internship not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "put": {
                "tags": [
                    "Internships"
                ],
                "summary": "Update an existing internship",
                "description": "Updates an existing internship and returns the updated internship",
                "operationId": "dc03c095549bafd1e28057eb53b4a974",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the internship",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Internship Title"
                                    },
                                    "major_id": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated description of the internship."
                                    },
                                    "link": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com/updated-internship"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Internship updated successfully"
                    },
                    "404": {
                        "description": "Internship not found"
                    },
                    "400": {
                        "description": "Validation error"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            },
            "delete": {
                "tags": [
                    "Internships"
                ],
                "summary": "Delete an internship",
                "description": "Deletes an existing internship by ID",
                "operationId": "1ce8a406e4c5fdcce2956d6e4213e790",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the internship",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Internship deleted successfully"
                    },
                    "404": {
                        "description": "Internship not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/user/deactivate": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Deactivate a user's account",
                "operationId": "a38e356a339bf90b689f9a2c99a6fac5",
                "responses": {
                    "200": {
                        "description": "Account has been successfully deactivated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account has been successfully deactivated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/user/undeactivate": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Undeactivate a user's account",
                "operationId": "de9c50e3ae32631bcd7fe834055ac697",
                "responses": {
                    "200": {
                        "description": "Account has been successfully undeactivated.",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Account has been successfully undeactivated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "tags": [
        {
            "name": "About Us",
            "description": "About Us management endpoints"
        },
        {
            "name": "Authentication",
            "description": "Authentication operations"
        },
        {
            "name": "Instructors",
            "description": "Instructor management endpoints"
        },
        {
            "name": "User",
            "description": "User operations"
        },
        {
            "name": "Courses",
            "description": "Courses"
        },
        {
            "name": "Internships",
            "description": "Internships"
        }
    ]
}