{
    "openapi": "3.0.0",
    "info": {
        "title": "Univibe API",
        "description": "API documentation for Univibe.",
        "contact": {
            "email": "support@univibe.com"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api",
            "description": "API Server"
        }
    ],
    "paths": {
        "/api/posts/{post}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get a single post",
                "description": "Retrieve details of a single post by its ID",
                "operationId": "d3910995cb542d02254c9fc6133cc10c",
                "parameters": [
                    {
                        "name": "post",
                        "in": "path",
                        "description": "ID of the post",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful retrieval",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "title": {
                                            "type": "string"
                                        },
                                        "content": {
                                            "type": "string"
                                        },
                                        "created_at": {
                                            "type": "string",
                                            "format": "date"
                                        },
                                        "author": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Post not found"
                    }
                }
            }
        },
        "/show_posts": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get list of posts",
                "description": "Retrieve a list of all posts in descending order of creation",
                "operationId": "bde68f350864604b0fcc1e14cbbc03c5",
                "responses": {
                    "200": {
                        "description": "Successful retrieval"
                    },
                    "500": {
                        "description": "Failed to retrieve posts"
                    }
                }
            }
        },
        "/api/add_post": {
            "post": {
                "tags": [
                    "Posts"
                ],
                "summary": "Create a new post",
                "description": "Create a new post and optionally add poll options if the post is a poll",
                "operationId": "144d1b0771351344843c2ef1c47836a0",
                "requestBody": {
                    "description": "Post object that needs to be added",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content"
                                ],
                                "properties": {
                                    "title": {
                                        "description": "Title of the post",
                                        "type": "string",
                                        "example": "New Post Title"
                                    },
                                    "content": {
                                        "description": "Content of the post",
                                        "type": "string",
                                        "example": "This is the content of the post."
                                    },
                                    "postType": {
                                        "description": "The type of post (e.g., poll, normal)",
                                        "type": "string",
                                        "example": "poll"
                                    },
                                    "poll": {
                                        "description": "Poll details, if postType is 'poll'",
                                        "properties": {
                                            "options": {
                                                "description": "Options for the poll",
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create post"
                    }
                }
            }
        },
        "/api/show_user_post/{id}": {
            "get": {
                "tags": [
                    "Posts"
                ],
                "summary": "Get posts by user",
                "description": "Retrieve all posts made by a specific user",
                "operationId": "2a5bfe534238de13f95a8fbf9da0ff93",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the user",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user's posts"
                    },
                    "404": {
                        "description": "User or posts not found"
                    }
                }
            }
        },
        "/api/update_post/{id}": {
            "put": {
                "tags": [
                    "Posts"
                ],
                "summary": "Update a post",
                "description": "Update an existing post and optionally update poll options if it's a poll",
                "operationId": "3c2fe20b1cacafae55bcc7936cf77af8",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to update",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "title",
                                    "content"
                                ],
                                "properties": {
                                    "title": {
                                        "type": "string",
                                        "example": "Updated Post Title"
                                    },
                                    "content": {
                                        "type": "string",
                                        "example": "Updated content of the post"
                                    },
                                    "postType": {
                                        "type": "string",
                                        "example": "poll"
                                    },
                                    "poll": {
                                        "properties": {
                                            "options": {
                                                "type": "array",
                                                "items": {
                                                    "type": "string"
                                                }
                                            }
                                        },
                                        "type": "object"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "Failed to update post"
                    }
                }
            }
        },
        "/api/delete_post/{id}": {
            "delete": {
                "tags": [
                    "Posts"
                ],
                "summary": "Delete a post",
                "description": "Delete an existing post by its ID",
                "operationId": "c6d37d931df9ab4a3e508c5c95912919",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the post to delete",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Post deleted successfully"
                    },
                    "404": {
                        "description": "Post not found"
                    },
                    "500": {
                        "description": "Failed to delete post"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "Post": {
                "title": "Post",
                "description": "A model representing a blog post",
                "properties": {
                    "id": {
                        "description": "Unique identifier for the post",
                        "type": "integer"
                    },
                    "title": {
                        "description": "Title of the post",
                        "type": "string"
                    },
                    "content": {
                        "description": "Content of the post",
                        "type": "string"
                    },
                    "postType": {
                        "description": "Type of the post (e.g., normal, poll)",
                        "type": "string"
                    },
                    "created_at": {
                        "description": "Date and time when the post was created",
                        "type": "string",
                        "format": "date-time"
                    },
                    "updated_at": {
                        "description": "Date and time when the post was last updated",
                        "type": "string",
                        "format": "date-time"
                    },
                    "author": {
                        "description": "Author of the post",
                        "type": "string"
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "name": "Authorization",
                "in": "header",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Posts",
            "description": "Posts"
        }
    ]
}